---
import Layout from "../../layouts/Layout.astro";
import ImageGallery from "../../components/ImageGallery.vue";
import Ingredients from "../../components/Ingredients.vue";
import getRecipes from "../../data/new_recipes.json";
import { Image } from "astro:assets";
import Description from "../../components/Description.astro";
import StepByStep from "../../components/StepByStep.astro";
import Divider from "../../components/Divider.astro";
import Tips from "../../components/Tips.astro";
import VinTips from "src/components/VinTips.astro";
import CookingMode from "src/components/CookingMode.vue";

export async function getStaticPaths() {
  const recipes = getRecipes;
  return recipes.map((post) => {
    return {
      params: { id: post.id },
      props: { post },
    };
  });
}

const { id } = Astro.params;
const { post } = Astro.props;

const images = post.images;
const mainImage = post.imageurl;

const title = post.title;
---

<Layout title={title} description={post.description} image={mainImage}>
  <div class="recipe">
    <div class="recipe-grid">
      <div class="recipe-title">
        <h1>
          {post.title}
        </h1>
      </div>
      <div class="recipe-image fade-in">
        <Image
          class="recipe__main-image"
          src={mainImage}
          alt=""
          width={500}
          height={640}
          sizes="(max-width: 400px) 100vw, 500px"
          format="webp"
          quality="max"
        />
      </div>
      <div class="recipe-modal">
        <CookingMode
          steps={post.steps}
          ingredients={post.ingredients}
          portions={post.portions}
          client:only="vue"
        />
      </div>
      <div class="recipe-description">
        <Description
          description={post.description}
          longdescription={post.longDescription}
          time={post.time}
          portions={post.portions}
        />
        <Divider grey />
      </div>

      <div class="recipe-steps">
        <h2>Oppskriften</h2>

        <StepByStep steps={post.steps} />
      </div>

      <div class="recipe-ingredients">
        <Ingredients
          ingredients={post.ingredients}
          portions={post.portions}
          client:load
        />
        <Tips tips={post.tips} chef={post.chef} tipsurl={post.tipsurl} />
        {
          post.vintipsnavn && (
            <VinTips
              vintipsNavn={post.vintipsnavn}
              vintipsUrl={post.vintipsUrl}
            />
          )
        }
      </div>
    </div>
    <ImageGallery images={images} />
  </div>
</Layout>
<style lang="scss" scoped>
  @use "sass:map";
  @use "../../styles/variables/" as *;
  @use "../../styles/mixins/breakpoints" as *;
  @use "../../styles/mixins/" as *;
  .recipe {
    margin: 16px auto;
    h1 {
      @include get-text("fs-h4");
      font-weight: 600;
      margin-bottom: 8px;
      color: var(--fs-green-300);
      width: 66.666667%;
      text-wrap: balance;

      @include bp("tablet-up") {
        @include get-text("fs-h3");
        font-weight: 600;
      }
    }
    h2 {
      @include get-text("fs-h5");
      margin-top: 8px;
      margin-bottom: 8px;
    }
  }

  .recipe-grid {
    display: grid;
    grid-gap: 18px;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    grid-template-areas:
      "title"
      "image"
      "description"
      "aside"
      "cookingmode"
      "steps";

    @include bp("tablet-up") {
      grid-template-columns: 2fr;
      grid-template-areas:
        "title title aside"
        "image image aside"
        "description description aside"
        "cookingmode cookingmode aside"
        "steps steps aside";
    }
  }

  .recipe-title {
    grid-area: title;
    align-self: center;
  }

  .recipe-image {
    grid-area: image;
  }
  .recipe-modal {
    grid-area: cookingmode;
    @include bp("tablet-up") {
      display: none;
    }
  }

  .recipe-description {
    grid-area: description;
  }

  .recipe-steps {
    grid-area: steps;
  }

  .recipe-ingredients {
    grid-area: aside;
    max-width: 360px;

    @include bp("tablet-up") {
      grid-row-start: 2;
    }
  }
</style>
