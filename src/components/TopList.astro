---
import SmallCards from "./cards/SmallCards.vue";
const { recipes } = Astro.props;

const data = await fetch(
  `https://plausible.io/api/v1/stats/breakdown?site_id=foodstalker.no&period=30d&property=event:page&limit=10`,
  {
    method: "GET",
    headers: {
      Authorization: `Bearer ${import.meta.env.VITE_PLAUSIBLE_API_KEY}`,
    },
  }
);

const pages = await data.json();

const recipeIdRegex = /^\/oppskrift\/([^/]+)/;

// Extract recipe IDs and visitors
const recipesData = pages.results
  .filter((page) => page.page.startsWith("/oppskrift/"))
  .map((page) => {
    const match = page.page.match(recipeIdRegex);
    if (match) {
      const id = match[1]; // Extract the recipe ID from the URL
      return {
        id,
        visitors: parseInt(page.visitors),
      };
    }
    return null;
  })
  .filter((page) => page !== null);

// Sort recipes by visitors in descending order
recipesData.sort((a, b) => b.visitors - a.visitors);

// Take the top 5 recipes
const topFiveRecipes = recipesData.slice(0, 5);

// Extract recipe IDs
const recipeIds = topFiveRecipes.map((recipe) => recipe.id);

// Filter recipes based on the top 5 IDs
const sortedRecipes = recipeIds.map((id) =>
  recipes.find((recipe) => recipe.id === id)
);
---

{
  sortedRecipes.length > 0 ? (
    <ul>
      {sortedRecipes.map((page) => (
        <li>
          <SmallCards
            title={page.title}
            description={page.description}
            image={page.imageurl}
            href={"/oppskrift/" + page.id}
          />
        </li>
      ))}
    </ul>
  ) : (
    <p>Ingen topp 5 i dag</p>
  )
}
